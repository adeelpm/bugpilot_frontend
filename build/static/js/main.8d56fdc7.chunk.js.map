{"version":3,"sources":["env.js","util/headers.js","firebaseconf.js","components/table.js","screens/bugScreen.js","screens/signup.js","screens/projectScreen.js","screens/signin.js","index.js"],"names":["module","exports","API_URL","headers","authorization","Cookies","get","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","require","Tablee","props","useState","sta","setSta","use","setUser","editModal","seteditModal","openImage","setOpenImage","fileurls","setfileurls","cs","field","headerName","width","renderCell","param","dropdown","row","attachments","value","imageviewbut","uname","assigned_to","assigned_by","editSvg","rw","datas","map","id","title","description","status","created_on","opened_on","last_modified","closed_on","edit","Button","onClick","imageview","urls","split","console","log","dropdownhalder","a","uri","axios","put","then","res","refresh","catch","err","e","temp","bid","bugTitle","bugDescription","bugAssignto","bugFileUrl","setfieldvalue","getMembers","handleEditBugPost","fileurl","data","rowCount","alert","Dropdown","onSelect","key","target","innerText","Toggle","variant","disabled","Menu","Item","handleDelete","delete","length","pid","Modal","aria-labelledby","centered","Body","size","show","Header","Title","style","height","Form","Group","margin","Label","Control","type","onChange","event","placeholder","as","onc","element","eventKey","username","files","bugFile","initialFiles","Footer","project_id","storageref","storage","ref","forEach","file","i","arr","scref","child","name","snapshot","getDownloadURL","url","handleEditBug","autoplay","open","onClose","onStart","position","media","src","onRowClick","rowHeight","rows","columns","cookies","BugScreen","getbug","state","setState","createbug","createbugpost","post","command","MyVerticallyCenteredModal","getProjectMembers","users","location","pname","modalShow","this","Navbar","Brand","href","Collapse","className","Text","getmem","Component","SignUp","setdata","isError","setIsError","errordata","setErrorData","signuphandler","password","repassword","email","u","error_code","bottom","TextField","label","on","required","error","color","ProjectScreen","getProject","window","hostname","uid","to","pathname","disableColumnMenu","disableColumnResize","editIcon","toggleEditModal","projectName","projectDescription","createProject","iid","projectmembers","push","Number","parseInt","uniquearray","Array","from","Set","pdescription","pmembers","toggleModal","rej","createProjectModalShow","editProjectModalShow","searchuser","Autocomplete","option","mem","multiple","options","getOptionLabel","filterSelectedOptions","renderInput","params","deleteProject","updateProject","right","routing","exact","path","component","setError","history","useHistory","forward","loc","SignIn","usrnme","pwd","message","set","qrdata","sameSite","secure","token","top","display","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8d56fdc7.chunk.js","sourcesContent":["const API_URL='https://bugpilot-backe   nd.herokuapp.com'\r\n\r\n// const API_URL='http://localhost:5000'\r\nmodule.exports={API_URL}","import Cookies from 'universal-cookie'\r\nconst cookies = new Cookies()\r\nconst headers={\r\n    headers: {\r\n        authorization: cookies.get('token'),\r\n    }\r\n}\r\n\r\nexport default headers","\r\n\r\n\r\n// <!-- The core Firebase JS SDK is always required and must be listed first -->\r\n\r\n// <!-- TODO: Add SDKs for Firebase products that you want to use\r\n//      https://firebase.google.com/docs/web/setup#available-libraries -->\r\n\r\n\r\n  // Your web app's Firebase configuration\r\nimport firebase from 'firebase'\r\n\r\nlet firebaseConfig = {\r\n    apiKey: \"AIzaSyCUCPZNS3OfTB9CzSLfsx9wHiSHBJVBVm4\",\r\n    authDomain: \"bugpilot.firebaseapp.com\",\r\n    projectId: \"bugpilot\",\r\n    storageBucket: \"bugpilot.appspot.com\",\r\n    messagingSenderId: \"310736969447\",\r\n    appId: \"1:310736969447:web:5f85f13bf1f098aef68c42\"\r\n  };\r\n  // Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;\r\n\r\n","import { Modal, Button, Form, Dropdown, } from 'react-bootstrap';\r\nimport axios from 'axios'\r\nimport headers from '../util/headers';\r\n//import {Table,TableRow,TablePagination,TableHead,TableContainer,TableCell,TableBody, Paper} from '@material-ui/core';\r\nimport { XGrid } from \"@material-ui/x-grid\";\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { DropzoneArea } from 'material-ui-dropzone';\r\nimport firebase from '../firebaseconf'\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState } from 'react'\r\nimport { Slide } from 'material-auto-rotating-carousel';\r\nimport { AutoRotatingCarousel } from 'material-auto-rotating-carousel';\r\nconst {API_URL}=require('../env')\r\n\r\n// import Cookies from 'universal-cookie';\r\n\r\n// const cookies=new Cookies()\r\n\r\n// class Tablee extends Component {\r\n\r\n//     constructor(props) {\r\n//         super(props)\r\n//         console.log(\"tablee props\",props)\r\n//         this.state = {\r\n//             data:this.props.datas,\r\n//             editmodal: false,\r\n//             bid:'',\r\n//             bugTitle:\"\",\r\n//             bugDescription:'',\r\n//             bugAssignto:'',\r\n//             users:[],\r\n//             rw:[]\r\n//           }\r\n//           // this.rw=this.rw.bind(this)\r\n//     }\r\n\r\n//     componentDidMount(){\r\n//       this.filldata()\r\n//     }\r\n//     componentDidUpdate(props){\r\n//       if(this.props.datas!=props.datas)\r\n//       {\r\n//         console.log(this.props.datas.data)\r\n//         this.setState({data:this.props.datas},()=>{\r\n//           this.filldata()\r\n//         })\r\n\r\n\r\n//       }\r\n//     }\r\n\r\n//     filldata=()=>{\r\n//       let rw=this.state.data.map((row)=>{\r\n//         return({\r\n//             id:row.id,\r\n//             title:row.title,\r\n//             description:row.description,\r\n//             status:row.status,\r\n//             assigned_to:row.assigned_to,\r\n//             assigned_by:row.assigned_by,\r\n//             created_on:row.opened_on,\r\n//             last_modified:row.closed_on,\r\n//             edit:\"null\"\r\n//         })\r\n//     })\r\n//     this.setState({rw:rw})\r\n//     }\r\n\r\n//     async dropdownhalder(bid, status)  {\r\n//         const uri = `http://localhost:5000/api/bug/${bid}`;\r\n//         // console.log(uri)\r\n//         await axios.put(uri,{ status: status },headers).then(\r\n//         (res)=>{ this.props.refresh() }\r\n//         ).catch(\r\n//             (err)=>{console.log(\"status err\",err)}\r\n//         )\r\n//     }\r\n\r\n//     uname=this.props.uname;\r\n//     handleEditBug=async()=>{\r\n//       const bid=this.state.bid\r\n//       const title=this.state.bugTitle\r\n//       const description=this.state.bugDescription\r\n//       const assigned_to=this.state.bugAssignto\r\n//       const uri = `http://localhost:5000/api/bug/update/${bid}`\r\n//       await axios.put(uri,{title,description,assigned_to},headers).then(\r\n//         (res)=>{\r\n//           console.log(\"res\",res)\r\n//           if(res.data.data.affectedRows==1){\r\n//             alert('Bug updated')\r\n//             this.setState({editmodal:false})\r\n//             this.props.refresh()\r\n\r\n//           }\r\n//         }\r\n\r\n//       )\r\n//     }\r\n//     handleDelete=async()=>{\r\n//       const bid=this.state.bid\r\n//       const uri = `http://localhost:5000/api/bug/delete/${bid}`\r\n//       axios.delete(uri,headers).then(\r\n//         res=>{\r\n//           console.log(res)\r\n//           if(res.data.data.affectedRows==1){\r\n//             alert('Bug Deleted Permanently')\r\n//              this.props.refresh() \r\n//              this.setState({\r\n//                editmodal:false\r\n//              })\r\n//           }\r\n//         }\r\n//       )\r\n\r\n\r\n//     }\r\n\r\n//     editSvg(props){\r\n//         const setfieldvalue=()=>{\r\n//             this.setState({\r\n//             bid:props.row.id,\r\n//             bugTitle:props.row.title,\r\n//             bugDescription:props.row.description,\r\n//             bugAssignto:props.row.assigned_to,\r\n//             users:[],\r\n//             })\r\n\r\n//         }\r\n\r\n//         // handleEdit=()=>{}\r\n//         // onClick={(e)=>{console.log(props.row)}}\r\n//         // console.log(\"editsvg props\",props)\r\n\r\n\r\n//         return(<EditIcon  onClick={(e)=>{this.setState({editmodal:true});setfieldvalue();console.log(\"editsug props\",props)}}/>)\r\n\r\n//     }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//     dropdown(row){\r\n//         return(\r\n//         <Dropdown className=\"posabsolute\"  onSelect={(key, e) => { this.dropdownhalder(row.id,e.target.innerText) }}>\r\n//         <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\" disabled={!(this.uname===row.assigned_to || this.uname===row.assigned_by)}>\r\n//             {row.status}\r\n//         </Dropdown.Toggle>\r\n//         <Dropdown.Menu>\r\n//             <Dropdown.Item >Open</Dropdown.Item>\r\n//             <Dropdown.Item >Closed</Dropdown.Item>\r\n//             <Dropdown.Item >Fixed</Dropdown.Item>\r\n//             <Dropdown.Item >Reopen</Dropdown.Item>\r\n//         </Dropdown.Menu>\r\n//         </Dropdown>\r\n//         )\r\n//     }\r\n\r\n//     cs = [\r\n//         { field: 'id', headerName: 'ID', width: 70 },\r\n//         { field: 'title', headerName: 'Title', width: 130 },\r\n//         { field: 'description', headerName: 'Description', width: 130 },\r\n//         { field: 'status', headerName: 'Status',/* type: 'number',*/ width: 180,renderCell:param=>this.dropdown(param.row)},\r\n//         { field: 'assigned_to', headerName: 'Assigned to', width: 130, },\r\n//         { field: 'assigned_by', headerName: 'Assigned by', width: 130, },\r\n//         { field: 'created_on', headerName: 'Opened on', width: 200, },\r\n//         { field: 'last_modified', headerName: 'Last Modified', width: 200, },\r\n//         {field:'edit',headerName:'Edit',width:70,renderCell:(param)=>this.editSvg(param)}\r\n\r\n//       ];\r\n\r\n//       // rw=[]\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//     render() {\r\n//         return (\r\n//             <>\r\n\r\n//           <Modal  size=\"lg\" show={this.state.editmodal}  aria-labelledby=\"contained-modal-title-vcenter\"  centered>\r\n//                 <Modal.Header>\r\n//                   <Modal.Title id=\"contained-modal-title-vcenter\">\r\n//                     Edit Bug\r\n//                     </Modal.Title>\r\n//                 </Modal.Header>\r\n//                 <Modal.Body style={{height:'75vh',}}>\r\n//                 <Form.Group style={{margin:'15px'}}>\r\n//                     <Form.Label>Bug Title </Form.Label>\r\n//                     <Form.Control size=\"lg\" type=\"text\"  onChange={(event)=>{this.setState({bugTitle:event.target.value},()=>{console.log(\"bug\",this.state.bugTitle)})}} value={this.state.bugTitle} placeholder=\"\"/>           \r\n//                 </Form.Group>\r\n//                 <Form.Group style={{margin:'15px'}}>\r\n//                     <Form.Label>Description </Form.Label>\r\n//                     <Form.Control size=\"xl\" as=\"textarea\" onChange={(event)=>this.setState({bugDescription:event.target.value})} value={this.state.bugDescription} placeholder=\"\"/>           \r\n//                 </Form.Group>\r\n//                 <Form.Group style={{margin:'15px'}} >\r\n//                     <Form.Label>Assigned to </Form.Label>\r\n//                     {<Dropdown  onSelect={(key,e)=>{this.setState({bugAssignto:e.target.innerText})}} >\r\n//                       <Dropdown.Toggle>\r\n//                          {this.state.bugAssignto?this.state.bugAssignto:'Assign to'}\r\n//                       </Dropdown.Toggle>\r\n//                       <Dropdown.Menu  onSelect>{\r\n//                         this.state.users.map(element => (\r\n//                           <Dropdown.Item eventKey={element.id} >{element.username}\r\n//                           </Dropdown.Item> ))\r\n//                         }\r\n//                       </Dropdown.Menu>\r\n//                     </Dropdown>}\r\n//                     {/* <Form.Control  size=\"lg\" type=\"text\"  onChange={(event)=>this.setState({bugAssignto:event.target.value})} value={this.state.bugAssignto} placeholder=\"\"/>            */}\r\n//                 </Form.Group>\r\n//                 <div style={{margin:'15px'}}> <DropzoneArea /></div>\r\n//                   </Modal.Body>\r\n//                 <Modal.Footer>\r\n\r\n//                   <Button variant=\"success\" onClick={() => {this.handleDelete()}}> Delete</Button>\r\n//                   <Button onClick={() => { this.setState({editmodal:false}) }}>Close</Button>\r\n//                   <Button onClick={() => { this.handleEditBug()}}>Assign</Button>\r\n//                 </Modal.Footer>\r\n//               </Modal>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//           <div style={{ height: '75vh', width: '75vw' }}>\r\n//             <XGrid rows={this.state.rw} columns={this.cs}   />\r\n//           </div>\r\n//           </>\r\n//         );\r\n//     }\r\n// }\r\n\r\n// const { withStyles } = require('@material-ui/core/styles');\r\n// const { red} = require('@material-ui/core/colors');\r\n\r\n\r\n\r\n// const API_URL=process.env.REACT_APP_API_URL\r\n\r\nexport default function Tablee(props) {\r\n  const [sta, setSta] = useState({})\r\n  const [use, setUser] = useState([])\r\n\r\n  const [editModal, seteditModal] = useState(false)\r\n  const [openImage, setOpenImage] = useState(false)\r\n  const [fileurls,setfileurls]=useState([])\r\n\r\n  // let storageref = firebase.storage().ref()\r\n  // let scref=storageref.child(`screenshots/${file.name}`)\r\n\r\n\r\n\r\n  const cs = [\r\n    { field: 'id', headerName: 'ID', width: 70 },\r\n    { field: 'title', headerName: 'Title', width: 130 },\r\n    { field: 'description', headerName: 'Description', width: 150 ,},\r\n    { field: 'status', headerName: 'Status',/* type: 'number',*/ width: 180, renderCell: param => dropdown(param.row) },\r\n    { field: 'attachments', headerName: 'Attachments', renderCell: (attachments) => (attachments.value!==\"No Images Found\")?imageviewbut(attachments.value):null, width: 200 },\r\n    { field: 'assigned_to', headerName: 'Assigned to', width: 130, },\r\n    { field: 'assigned_by', headerName: 'Assigned by', width: 130, },\r\n    { field: 'created_on', headerName: 'Opened on', width: 200, },\r\n    { field: 'last_modified', headerName: 'Last Modified', width: 200, },\r\n    { field: 'edit', headerName: 'Edit', width: 70, renderCell: (param) =>(uname === param.row.assigned_to || uname === param.row.assigned_by)?editSvg(param):false }\r\n\r\n  ];\r\n\r\n  const rw = props.datas.map((row) => {\r\n    return ({\r\n      id: row.id,\r\n      title: row.title,\r\n      description: row.description,\r\n      status: row.status,\r\n      assigned_to: row.assigned_to,\r\n      assigned_by: row.assigned_by,\r\n      created_on: row.opened_on,\r\n      last_modified: row.closed_on,\r\n      attachments: (row.attachments!==\"NULL\" && row.attachments!==null)?row.attachments:\"No Images Found\",\r\n      edit: \"null\"\r\n    })\r\n  })\r\n\r\n\r\n  const imageviewbut=(param)=>{\r\n    // console.log(param)\r\n    // imageview(param)\r\n   \r\n   return (<Button onClick={() =>imageview(param) }>Open carousel</Button>)\r\n  }\r\n\r\n  const imageview = (param) => {\r\n\r\n      const urls=param.split(\",\")\r\n      console.log(urls)\r\n\r\n      setfileurls(urls)\r\n      setOpenImage(true)\r\n  }\r\n\r\n\r\n    const dropdownhalder = async (id, status) => {\r\n      const uri = `${API_URL}/api/bug/${id}`\r\n      // console.log(uri)\r\n      await axios.put(uri, { status: status }, headers).then(\r\n        (res) => { props.refresh() }\r\n      ).catch(\r\n        (err) => { console.log(\"status err\", err) }\r\n      )\r\n    }\r\n    const uname = props.uname;\r\n\r\n    const editSvg = (props) => {\r\n      const setfieldvalue = () => {\r\n        console.log(\"props editsvg\", props.row.attachments)\r\n        let temp = {\r\n          bid: props.row.id,\r\n          bugTitle: props.row.title,\r\n          bugDescription: props.row.description,\r\n          bugAssignto: props.row.assigned_to,\r\n          bugFileUrl:props.row.attachments!==\"No Images Found\"?props.row.attachments:null\r\n\r\n        }\r\n        console.log(\"setting field value\", temp)\r\n        setSta({...temp})\r\n\r\n\r\n      }\r\n\r\n\r\n\r\n      // handleEdit=()=>{}\r\n      // onClick={(e)=>{console.log(props.row)}}\r\n      return (<EditIcon onClick={(e) => { setfieldvalue(); getMembers(); seteditModal(true); }} />)\r\n    }\r\n\r\n\r\n    const handleEditBug=()=>{\r\n      let files=sta.bugFile\r\n      let project_id=props.pid\r\n\r\n      let storageref=firebase.storage().ref()\r\n\r\n      if (files.length>0){\r\n      files.forEach((file,i,arr)=>{\r\n       // gs://bugpilot.appspot.com/screenshots/Screenshot (98).png\r\n         // let scref=storageref.child(`screenshots/${project_id+new Date().today() + \" @ \" + new Date().timeNow()+file.name}`)\r\n         let scref=storageref.child(`screenshots/${project_id+file.name}`)\r\n   \r\n   \r\n        scref.put(file).then(snapshot => {\r\n          // fileurl.push(scref.getDownloadURL())\r\n          console.log('Uploaded a blob or file!',snapshot);\r\n          scref.getDownloadURL().then(\r\n            \r\n          url => {\r\n            console.log('start');let temp=sta;temp.bugFileUrl=url;setSta(temp);console.log(\"in editbug\",sta)\r\n            if(i+1===arr.length){\r\n              handleEditBugPost()}\r\n          \r\n          });\r\n         \r\n   \r\n        });\r\n         console.log(\"i arr.len\",i,arr.length)\r\n   \r\n        \r\n   \r\n       })\r\n      }else{\r\n        let temp=sta;temp.bugFileUrl=null;setSta(temp);\r\n        handleEditBugPost()\r\n      }\r\n\r\n    }\r\n\r\n\r\n    const handleEditBugPost = async () => {\r\n      console.log(\"hitting\")\r\n      const bid = sta.bid\r\n      const title = sta.bugTitle\r\n      const description = sta.bugDescription\r\n      const assigned_to = sta.bugAssignto\r\n      // const fileurl=null\r\n      const fileurl=sta.bugFileUrl\r\n      console.log(\"edit bug  before post\",sta.bugFileUrl,fileurl)\r\n      const uri = `${API_URL}/api/bug/update/${bid}`\r\n\r\n      \r\n      // let data={ title, description, assigned_to ,fileurl};\r\n      // let data2={ title, description, assigned_to}\r\n\r\n\r\n\r\n      await axios.put(uri,{title, description, assigned_to ,fileurl}, headers).then(\r\n        (res) => {\r\n          console.log(\"res\", res)\r\n          if (res.data.data.rowCount === 1) {\r\n            alert('Bug updated')\r\n            setSta(false)\r\n            seteditModal(false)\r\n            props.refresh()\r\n\r\n          }\r\n        }\r\n\r\n      )\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const dropdown = (row) => {\r\n      return (\r\n        // className=\"posabsolute\"\r\n        <Dropdown  onSelect={(key, e) => { dropdownhalder(row.id, e.target.innerText) }}>\r\n          <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\" disabled={!(uname === row.assigned_to || uname === row.assigned_by)}>\r\n            {row.status}\r\n          </Dropdown.Toggle>\r\n          <Dropdown.Menu>\r\n            <Dropdown.Item >Open</Dropdown.Item>\r\n            <Dropdown.Item >Closed</Dropdown.Item>\r\n            <Dropdown.Item >Fixed</Dropdown.Item>\r\n            <Dropdown.Item >Reopen</Dropdown.Item>\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n      )\r\n    }\r\n\r\n    const handleDelete = async () => {\r\n      const bid = sta.bid\r\n      const uri = `${API_URL}/api/bug/delete/${bid}`\r\n      axios.delete(uri, headers).then(\r\n        res => {\r\n          console.log(res)\r\n          if (res.data.data.rowCount === 1) {\r\n            alert('Bug Deleted Permanently')\r\n            props.refresh()\r\n            seteditModal(false)\r\n          }\r\n        }\r\n      )\r\n\r\n    }\r\n\r\n    const getMembers = async () => {\r\n      if (use.length <= 0) {\r\n        const uri = `${API_URL}/api/user/projectmembers/${props.pid}`\r\n        await axios.get(uri, headers).then(\r\n          (res) => {\r\n            console.log(res)\r\n            setUser(res.data)\r\n          }\r\n        )\r\n        console.log(\"user\", use)\r\n      }\r\n      else return;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n      <>\r\n        <Modal id='ImageModal' aria-labelledby=\"contained-modal-title-vcenter\" centered>\r\n          <Modal.Body >\r\n\r\n          </Modal.Body>\r\n\r\n\r\n        </Modal>\r\n        <Modal size=\"lg\" show={editModal} aria-labelledby=\"contained-modal-title-vcenter\" centered>\r\n          <Modal.Header>\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n              Edit Bug\r\n                  </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body style={{ height: '75vh', }}>\r\n            <Form.Group style={{ margin: '15px' }}>\r\n              <Form.Label>Bug Title </Form.Label>\r\n              <Form.Control size=\"lg\" type=\"text\" onChange={(event) => { let temp = { ...sta }; temp.bugTitle = event.target.value; setSta(temp) }} value={sta.bugTitle} placeholder=\"\" />\r\n            </Form.Group>\r\n            <Form.Group style={{ margin: '15px' }}>\r\n              <Form.Label>Description </Form.Label>\r\n              <Form.Control size=\"xl\" as=\"textarea\" onChange={(event) => { let temp = { ...sta }; temp.bugDescription = event.target.value; setSta(temp); console.log(\"sta\", sta) }} value={sta.bugDescription} placeholder=\"\" />\r\n            </Form.Group>\r\n            <Form.Group style={{ margin: '15px' }} >\r\n              <Form.Label>Assigned to </Form.Label>\r\n              <Dropdown onc onSelect={(key, e) => { let temp = { ...sta }; temp.bugAssignto = e.target.innerText; setSta(temp) }} >\r\n                <Dropdown.Toggle>\r\n                  {sta.bugAssignto ? sta.bugAssignto : 'Assign to'}\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu onSelect>\r\n                  {\r\n                    use.map(element => (\r\n                      <Dropdown.Item eventKey={element.id} >{element.username}\r\n                      </Dropdown.Item>))\r\n                  }\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </Form.Group>\r\n            <div style={{ margin: '15px' }}> <DropzoneArea onChange={(files)=>{let temp={...sta};temp.bugFile=files;setSta({...temp});console.log(\"onchange zone\",files);console.log(\"initial files\",sta.bugFileUrl?.split(','))}} initialFiles={sta.bugFileUrl?.split(',')} /></div>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"success\" onClick={() => { handleDelete() }}> Delete</Button>\r\n            <Button onClick={() => { seteditModal(false); }}>Close</Button>\r\n            <Button onClick={() => { handleEditBug();  }}>Assign</Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n\r\n\r\n          <AutoRotatingCarousel\r\n          // https://mui.wertarbyte.com/#material-auto-rotating-carousel docs\r\n                autoplay={false}\r\n            // label='Get started'\r\n            open={openImage}\r\n            onClose={() => setOpenImage(false)}\r\n            onStart={() => setOpenImage(false)}\r\n            style={{ position: 'absolute' }}\r\n          >\r\n     \r\n       { fileurls.map(\r\n         url =><Slide\r\n            media={<img src={url} />}\r\n            // mediaBackgroundStyle={{ backgroundColor: red[400] }}\r\n            \r\n          />\r\n        )}\r\n      \r\n            \r\n\r\n          </AutoRotatingCarousel>\r\n        \r\n\r\n\r\n\r\n        \r\n        <div style={{ height: '80vh', width: '95vw' }}>\r\n          <XGrid onRowClick={() => { }} rowHeight=\"80\" rows={rw} columns={cs} />\r\n        </div>\r\n      </>\r\n    )\r\n  }","import axios from 'axios';\r\nimport Cookies from 'universal-cookie'\r\nimport React, { Component} from 'react'\r\nimport Tablee from \"../components/table\";\r\nimport headers from '../util/headers';\r\n// import img from '../25.gif'\r\nimport {  Modal, Button, Form,Dropdown, Navbar } from 'react-bootstrap'\r\nimport {DropzoneArea} from 'material-ui-dropzone'\r\nimport firebase from '../firebaseconf'\r\n\r\n\r\n\r\n\r\nimport '../index.css'\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\n\r\n\r\nconst cookies = new Cookies()\r\n// const API_URL=process.env.REACT_APP_API_URL\r\nconst {API_URL}=require('../env')\r\n\r\n\r\n\r\n\r\n\r\nclass BugScreen extends Component {\r\n\r\n\r\n\r\n  constructor(props) {\r\n    super(props) \r\n    this.state = {\r\n      pid:this.props.location.state.pid,\r\n      pname:this.props.location.state.pname,\r\n      data: [],\r\n      modalShow: false,\r\n      bugTitle:\"\",\r\n      bugDescription:'',\r\n      bugAssignto:'',\r\n      users:[],\r\n      files:[],\r\n      fileurl:[],\r\n\r\n\r\n    }\r\n    this.getbug()\r\n    console.log(this.state.pid,this.state.pname,this.state.users)\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  getbug = async () => {\r\n    console.log('Getting bug')\r\n    const uri = `${API_URL}/api/bug/${this.state.pid}`\r\n    await axios.get(uri, headers).then(\r\n      (res) => {\r\n        console.log(\"GetBug Res\",res)\r\n        this.setState({\r\n          data: res.data,\r\n        },()=>{\r\n          console.log(\"Get Bug res\",this.state.data)\r\n        }\r\n        )\r\n      }\r\n    )\r\n\r\n  }\r\n\r\n  createbug=()=>{\r\n\r\n    \r\n  //   Date.prototype.today = function () { \r\n  //     return ((this.getDate() < 10)?\"0\":\"\") + this.getDate() +\"/\"+(((this.getMonth()+1) < 10)?\"0\":\"\") + (this.getMonth()+1) +\"/\"+ this.getFullYear();\r\n  // }\r\n  \r\n  // // For the time now\r\n  // Date.prototype.timeNow = function () {\r\n  //      return ((this.getHours() < 10)?\"0\":\"\") + this.getHours() +\":\"+ ((this.getMinutes() < 10)?\"0\":\"\") + this.getMinutes() +\":\"+ ((this.getSeconds() < 10)?\"0\":\"\") + this.getSeconds();\r\n  // }\r\n    // const title=this.state.bugTitle\r\n    // const description=this.state.bugDescription\r\n    // const assigned_to=this.state.bugAssignto\r\n    const assigned_by=cookies.get('username')\r\n    console.log(\"assigned by,,,,\",assigned_by)\r\n    const project_id=this.state.pid\r\n    const files=this.state.files\r\n    let storageref=firebase.storage().ref()\r\n    console.log(\"len\",files.length)\r\n\r\n\r\n  if(files.length>0){\r\n    files.forEach((file,i,arr)=>{\r\n      // gs://bugpilot.appspot.com/screenshots/Screenshot (98).png\r\n        // let scref=storageref.child(`screenshots/${project_id+new Date().today() + \" @ \" + new Date().timeNow()+file.name}`)\r\n        let scref=storageref.child(`screenshots/${project_id+file.name}`)\r\n  \r\n  \r\n       scref.put(file).then((snapshot) => {\r\n         // fileurl.push(scref.getDownloadURL())\r\n         console.log('Uploaded a blob or file!');\r\n         scref.getDownloadURL().then(url => this.setState({ fileurl: [...this.state.fileurl, url] },()=>i+1===arr.length?this.createbugpost():null))\r\n  \r\n       });\r\n        console.log(\"arr i\",i,arr.length)\r\n  \r\n       \r\n  \r\n      })\r\n\r\n  }\r\n  else{\r\n    // this.setState({\r\n    //   fileurl:null\r\n    // },()=>{console.log('else file',this.state.fileurl)})\r\n    this.createbugpost()\r\n   \r\n  }\r\n\r\n    \r\n  \r\n\r\n    \r\n\r\n  }\r\n\r\n  createbugpost=async()=>{\r\n    const title=this.state.bugTitle\r\n    const description=this.state.bugDescription\r\n    const assigned_to=this.state.bugAssignto\r\n    const assigned_by=cookies.get('username')\r\n    console.log(\"assigned by,,,,\",assigned_by)\r\n    const project_id=this.state.pid\r\n    console.log(\"before post\",this.state.fileurl);\r\n\r\n    const uri = `${API_URL}/api/bug`\r\n    const fileLessData={title,description,assigned_to,assigned_by,project_id,fileurl:null}\r\n    const data={fileurl:this.state.fileurl}\r\n    \r\n      await axios.post(uri,{title,description,assigned_to,assigned_by,project_id,fileurl:'NULL'},headers).then(\r\n        (res)=>{\r\n          console.log(res)\r\n          if(res.data.command===\"INSERT\" && res.data.rowCount===1){\r\n            alert('Bug added')\r\n            this.MyVerticallyCenteredModal()\r\n            this.getbug()\r\n          }\r\n        }\r\n\r\n      )\r\n    }\r\n\r\n\r\n  \r\n  getProjectMembers=async()=>{\r\n    // console.log(this.state.users.length) \r\n    if(this.state.users.length<=0){\r\n      console.log('Get Members')\r\n\r\n      const uri = `${API_URL}/api/user/projectmembers/${this.state.pid}`\r\n      \r\n      await axios.get(uri,headers).then(\r\n        (res)=>{\r\n          // console.log(res)\r\n          this.setState({\r\n            users:res.data\r\n          })\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  MyVerticallyCenteredModal() {\r\n    this.setState({\r\n      modalShow: !this.state.modalShow\r\n    })\r\n  };\r\n\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n      <div style={{width:\"100vh\"}}>\r\n      <script src=\"https://apis.google.com/js/api.js\" type=\"text/javascript\"></script>\r\n      <Modal  size=\"lg\" show={this.state.modalShow}  aria-labelledby=\"contained-modal-title-vcenter\"  centered>\r\n          <Modal.Header>\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n              Create Bug\r\n              </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body style={{height:'75vh',}}>\r\n          <Form.Group style={{margin:'15px'}}>\r\n              <Form.Label>Bug Title </Form.Label>\r\n              <Form.Control size=\"lg\" type=\"text\"  onChange={(event)=>{this.setState({bugTitle:event.target.value},()=>{console.log(\"bug\",this.state.bugTitle)})}} value={this.state.bugTitle} placeholder=\"\"/>           \r\n          </Form.Group>\r\n          <Form.Group style={{margin:'15px'}}>\r\n              <Form.Label>Description </Form.Label>\r\n              <Form.Control size=\"xl\" as=\"textarea\" onChange={(event)=>this.setState({bugDescription:event.target.value})} value={this.state.bugDescription} placeholder=\"\"/>           \r\n          </Form.Group>\r\n          <Form.Group style={{margin:'15px'}} >\r\n              <Form.Label>Assigned to </Form.Label>\r\n              <Dropdown  onSelect={(key,e)=>{this.setState({bugAssignto:e.target.innerText})}} >\r\n                <Dropdown.Toggle>\r\n                   {this.state.bugAssignto?this.state.bugAssignto:'Assign to'}\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu  >{\r\n                  this.state.users.map(element => (\r\n                    <Dropdown.Item eventKey={element.id} >{element.username}\r\n                    </Dropdown.Item> ))\r\n                  }\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n              {/* <Form.Control  size=\"lg\" type=\"text\"  onChange={(event)=>this.setState({bugAssignto:event.target.value})} value={this.state.bugAssignto} placeholder=\"\"/>            */}\r\n          </Form.Group>\r\n          <div style={{margin:'15px'}}> <DropzoneArea  onChange={(file)=>{console.log(file);this.setState({files:file})}} /></div>\r\n            </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button onClick={() => { this.MyVerticallyCenteredModal() }}>Close</Button>\r\n            <Button onClick={() => { this.createbug()}}>Assign</Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n        \r\n      </div>\r\n\r\n        <Navbar>\r\n        <Navbar.Brand href=\"#home\">Bug Pilot</Navbar.Brand>\r\n        <Navbar.Toggle />\r\n        <Navbar.Collapse className=\"justify-content-end\">\r\n        <Navbar.Text>\r\n        Signed in as: <a href=\"#login\">{cookies.get('username')}</a>\r\n        </Navbar.Text>\r\n        </Navbar.Collapse>\r\n        </Navbar>  \r\n\r\n        <div className=\"flex-center\">\r\n          \r\n        \r\n          <h1>{this.state.pname}</h1>\r\n\r\n          <Button variant=\"outline-primary\" onClick={() => { this.MyVerticallyCenteredModal();this.getProjectMembers()}} >Add Bug/Issue</Button>\r\n\r\n          <div className=\"tabl\">\r\n            {\r\n           <Tablee datas={this.state.data} pid={this.state.pid} pname={this.state.pname} uname={cookies.get('username')} refresh={this.getbug} getmem={this.getProjectMembers} />\r\n            }\r\n          </div>\r\n\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BugScreen;\r\n\r\n\r\n//   class index extends Component{\r\n//     // const [modalShow, setModalShow] =useState(false);\r\n//     constructor(props){\r\n//     super(props)\r\n//     this.state={\r\n//         modalShow:false\r\n//       }\r\n\r\n//         }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    //  render(){\r\n    //         return \r\n    //         (\r\n\r\n\r\n\r\n    //             <div>\r\n\r\n    //             <Button variant=\"primary\" onClick={() => this.setState{modalShow:true}}> Launch vertically centered modal </Button>\r\n    //             <MyVerticallyCenteredModal show={modalShow} onHide={() => setModalShow(false)} />\r\n\r\n    //           </div>\r\n\r\n    //           )\r\n    //     }\r\n\r\n    //     }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useState} from 'react'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Button } from '@material-ui/core';\r\nimport axios from 'axios'\r\nimport '../index.css'\r\n\r\nconst {API_URL}=require('../env')\r\n// import API_URL =req\r\n\r\n// const API_URL=process.env.REACT_APP_API_URL\r\nfunction SignUp() {\r\n    const [data, setdata] = useState({})\r\n    const [isError, setIsError] = useState(false)\r\n    const[errordata, setErrorData] = useState({\r\n        res:\"\"\r\n    })\r\n    \r\n\r\n\r\n    const signuphandler =async() => {\r\n        // console.log(\"signup handler called\")\r\n        if (!data.username || !data.password || !data.repassword || !data.email) {\r\n            var temp = errordata\r\n            if (!data.username) {\r\n                temp.u = 'Enter a valid username'\r\n                setErrorData(temp)\r\n            }\r\n            return setIsError(true)\r\n        }\r\n\r\n\r\n\r\n        const url = `${API_URL}/api/user/adduser`\r\n\r\n        await axios.post(url, {\r\n            \"username\": data.username,\r\n            \"email\": data.email,\r\n            \"password\": data.password,\r\n\r\n        }).then((res) => {\r\n            console.log('then res',res)\r\n            if(res.data.command==='INSERT' && res.data.rowCount===1){\r\n                temp={...errordata}\r\n                temp.res=\"User Created\"\r\n                setErrorData(temp)\r\n                // console.log(\"after SetErrorData\",errordata.res)\r\n            }\r\n            else if(res.data.error_code===\"23505\")\r\n            {\r\n                // console.log(\"else if\",res.data.error_message)\r\n                temp={...errordata}\r\n                temp.res=\"Username already exist\"\r\n                setErrorData(temp)\r\n                // console.log(\"5 error data res\",errordata.res)\r\n                \r\n            }\r\n         \r\n        })\r\n\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <div className='form-parent flex-center'>\r\n\r\n            <div className='flex-center form'  >\r\n            <div style={{position: 'relative', bottom: '1rem'}}><h3>Sign Up</h3></div>\r\n\r\n                <TextField className=\"textfiel\" label=\"Username\" variant=\"outlined\" on onChange={(e) => {\r\n                    const temp = data\r\n                    temp.username = e.target.value\r\n\r\n                    setdata(temp)\r\n                    // console.log(data)\r\n                }} />\r\n                <div className=\"err\">{errordata.u}</div>\r\n                <TextField className=\"textfiel\" label=\"E-mail\" variant=\"outlined\" onChange={(e) => {\r\n                    const temp = data\r\n                    temp.email = e.target.value\r\n\r\n                    setdata(temp)\r\n                    // console.log(data)\r\n                }} />\r\n                <TextField className=\"textfiel\" label=\"Password\" type=\"password\" variant=\"outlined\"\r\n                    onChange={(e) => {\r\n                        const temp = data\r\n                        temp.password = e.target.value\r\n\r\n                        setdata(temp)\r\n                        // console.log(data)\r\n                        if (data.repassword) {\r\n                            if (data.password !== data.repassword) {\r\n\r\n                                setIsError(true)\r\n                            }\r\n                            else {\r\n                                setIsError(false)\r\n                            }\r\n                        }\r\n                    }} />\r\n                {/* {console.log(\"errror\", isError)} */}\r\n                <TextField required={true} error={isError} className=\"textfiel\" label=\"Re-enter Password\" type=\"password\" variant=\"outlined\" onChange={e => {\r\n                    const temp = data\r\n                    temp.repassword = e.target.value\r\n                    setdata(temp)\r\n                    // console.log(data)\r\n                    // console.log(data.password, data.repassword)\r\n                    if (data.password !== data.repassword) {\r\n                        setIsError(true)\r\n                    }\r\n                    else {\r\n                        setIsError(false)\r\n                    }\r\n                }} />\r\n\r\n                <Button variant='contained' color='primary' onClick={signuphandler}>Sign up</Button>\r\n                <div className=\"err\">{errordata.res}</div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n//\r\nexport default SignUp\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport headers from '../util/headers';\r\nimport Cookies from 'universal-cookie';\r\nimport '../index.css'\r\n// import img from '../25.gif'\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport { Modal, Button, Form, Navbar } from 'react-bootstrap'\r\nimport { XGrid } from \"@material-ui/x-grid\";\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\n// import Navbar from '../components/navbar'\r\n\r\nconst cookies = new Cookies()\r\nconst {API_URL}=require('../env')\r\n\r\n\r\n\r\nexport class ProjectScreen extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            rw: [],\r\n            projectId:\"\",\r\n            projectName: \"\",\r\n            projectDescription: \"\",\r\n            createProjectModalShow: false,\r\n            editProjectModalShow:false,\r\n            searchuser:[],\r\n            projectmembers:[]\r\n        }\r\n        this.getProject()\r\n    }\r\n\r\n\r\n    getProject = async () => {\r\n        console.log('getting project')\r\n        console.log(window.location.hostname)\r\n\r\n        let uid = cookies.get('uid')\r\n        console.log(uid)\r\n\r\n        const uri = `${API_URL}/api/project/${uid}`\r\n        await axios.get(uri, headers).then(\r\n            (res) => {\r\n                console.log(\"resdata\", res)\r\n                if(res.data.length==0){\r\n                    return console.log(\"No Projects\")\r\n                }\r\n                let row=res.data.map((row)=>{\r\n                    // console.log(\"list of project\",row)\r\n                    return({\r\n                        id:row.id,\r\n                        name:row.name,\r\n                        description:row.description\r\n                        \r\n                    })\r\n                })\r\n                this.setState({ rw:row })\r\n            }\r\n\r\n        )\r\n\r\n\r\n    }\r\n\r\n    toggleModal() {\r\n        console.log('calling modal')\r\n        console.log(this.state.createProjectModalShow)\r\n        this.setState({\r\n            createProjectModalShow:!this.state.createProjectModalShow\r\n\r\n        })\r\n        console.log(this.state.createProjectModalShow)\r\n        \r\n    }\r\n    toggleEditModal(){\r\n        this.setState({\r\n            editProjectModalShow:!this.state.editProjectModalShow\r\n        })\r\n    }\r\n\r\n\r\n    cs = [\r\n        { field: 'id', headerName: 'ID',  },\r\n        { field: 'name', headerName: 'Name',width:200,\r\n         renderCell:(param)=><Link to={{pathname:\"/buglist\",state:{pid:param.row.id,pname:param.row.name }}}>{param.row.name}</Link> },\r\n         {field:'edit',headerName:'Edit',disableColumnMenu:true,disableColumnResize:true,renderCell:(param)=>this.editIcon(param)}\r\n    ];\r\n\r\n    editIcon=(param)=>{\r\n        return(<EditIcon onClick={()=>{this.toggleEditModal();this.setState({projectId:param.row.id,projectName:param.row.name,projectDescription:param.row.description});console.log(param)}}/>)\r\n    }\r\n\r\n    createProject=()=>{\r\n\r\n        console.log('calling createproject')\r\n        let uid = cookies.get('uid')\r\n        let iid=this.state.projectmembers  \r\n        iid.push(Number.parseInt(uid, 10))\r\n        // this.setState({projectmembers:iid})\r\n        const uniquearray=Array.from(new Set(iid))\r\n\r\n        const uri = `${API_URL}/api/project/${uid}`\r\n\r\n        axios.post(uri,{pname:this.state.projectName,pdescription:this.state.projectDescription,pmembers:uniquearray},headers).then(\r\n\r\n            (res)=>{\r\n\r\n                // console.log(\"Create Project res\",res);\r\n                if(res.data[0].command===\"INSERT\"){\r\n                    alert('Project Added')\r\n                    this.toggleModal()\r\n                    this.getProject()\r\n                }\r\n            }\r\n        ).catch(\r\n            (rej)=>{console.log(\"Create Project Error\",rej)}\r\n        )\r\n\r\n\r\n\r\n    }\r\n    \r\n    getProjectMembers(props){\r\n        console.log(\"getprops\",props)\r\n\r\n        if(props){\r\n            const uri = `${API_URL}/api/project/projectmembers/${props}`\r\n            axios.get(uri,headers).then(\r\n                res=>{ \r\n                    this.setState({searchuser:res.data})\r\n                    console.log(\"get pro members resdata\",res)\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    getMembers(props){\r\n        console.log(\"get members props\",props)\r\n        if(props){\r\n            const uri = `${API_URL}/api/project/members/${props}`\r\n            axios.get(uri,headers).then(\r\n                res=>{\r\n                    this.setState({searchuser:res.data})\r\n                    console.log(\"get all members resdata\",res)\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    deleteProject(){\r\n\r\n        const pid =this.state.projectId\r\n        const uri = `${API_URL}/api/project/${pid}`\r\n\r\n        axios.delete(uri,headers).then(\r\n            res=>{\r\n                console.log(res)\r\n                alert('Project Deleted Permanently')\r\n                this.toggleEditModal()\r\n                this.getProject()\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    updateProject(){\r\n        const pid=this.state.projectId\r\n        const uri = `${API_URL}/api/project/edit/${pid}`\r\n        let uid = cookies.get('uid')\r\n\r\n\r\n        let iid=this.state.projectmembers  \r\n        iid.push(Number.parseInt(uid, 10))\r\n        // this.setState({projectmembers:iid})\r\n        const uniquearray=Array.from(new Set(iid))\r\n\r\n        axios.put(uri,{pname:this.state.projectName,pdescription:this.state.projectDescription,pmembers:uniquearray},headers).then(\r\n            res=>{\r\n                console.log(res)\r\n                alert(\"Project Updated\")\r\n            }\r\n        )\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className={'flex-center'}>   \r\n                <Navbar>\r\n                <Navbar.Brand href=\"#home\">Bug Pilot</Navbar.Brand>\r\n                <Navbar.Toggle />\r\n                <Navbar.Collapse className=\"justify-content-end\">\r\n                \r\n                <Navbar.Text>\r\n                Signed in as: <a href=\"#login\">{cookies.get('username')}</a>\r\n                </Navbar.Text>\r\n                </Navbar.Collapse>\r\n                </Navbar> \r\n\r\n\r\n                <div style={{ width: \"100vh\" }}>\r\n                    <Modal size=\"lg\" show={this.state.editProjectModalShow} aria-labelledby=\"contained-modal-title-vcenter\" centered>\r\n                        <Modal.Header>\r\n                            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                                Edit Project\r\n                            </Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body style={{ height: '75vh', }}>\r\n                            <Form.Group style={{ margin: '15px' }}>\r\n                                <Form.Label>Project Title </Form.Label>\r\n                                <Form.Control size=\"lg\" type=\"text\" onChange={(event) => { this.setState({ projectName: event.target.value }, () => { console.log(\"bug\", this.state.projectName) }) }} value={this.state.projectName} placeholder=\"\" />\r\n                            </Form.Group>\r\n                            <Form.Group style={{ margin: '15px' }}>\r\n                                <Form.Label>Description </Form.Label>\r\n                                <Form.Control size=\"xl\" as=\"textarea\" onChange={(event) => this.setState({ projectDescription: event.target.value })} value={this.state.projectDescription} placeholder=\"\" />\r\n                            </Form.Group>\r\n                            <div style={{  margin: '15px', }} >\r\n                                <label>Add Members</label>\r\n                                    <Autocomplete\r\n                                    onChange={(option, value) =>{this.setState({projectmembers:value.map(mem=>mem.id)},()=>{console.log(this.state.projectmembers)})}}\r\n                                    multiple\r\n                                    id=\"tags-outlined\"\r\n                                    options={this.state.searchuser}\r\n                                    getOptionLabel={(option) => option.username}\r\n                                    filterSelectedOptions\r\n                                    renderInput={(params) => (\r\n                                    <TextField\r\n                                    {...params}\r\n                                    onChange={(e)=>{this.getMembers(e.target.value)}}\r\n                                    variant=\"outlined\"\r\n                                    // label=\"filterSelectedOptions\"\r\n                                    // placeholder=\"Favorites\"\r\n                                    />\r\n                                    )}\r\n                                    />\r\n     \r\n                            </div>\r\n\r\n                                        \r\n\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button onClick={() => { this.deleteProject()}}>Delete</Button>\r\n                            <Button onClick={() => { this.toggleEditModal() }}>Close</Button>\r\n                            <Button onClick={()=>{this.updateProject()}}>Update Project</Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                </div>           \r\n\r\n                <div style={{ width: \"100vh\" }}>\r\n                    <Modal size=\"lg\" show={this.state.createProjectModalShow} aria-labelledby=\"contained-modal-title-vcenter\" centered>\r\n                        <Modal.Header>\r\n                            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                                Create Project\r\n                            </Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body style={{ height: '75vh', }}>\r\n                            <Form.Group style={{ margin: '15px' }}>\r\n                                <Form.Label>Project Title </Form.Label>\r\n                                <Form.Control size=\"lg\" type=\"text\" onChange={(event) => { this.setState({ projectName: event.target.value }, () => { console.log(\"bug\", this.state.projectName) }) }} value={this.state.bugTitle} placeholder=\"\" />\r\n                            </Form.Group>\r\n                            <Form.Group style={{ margin: '15px' }}>\r\n                                <Form.Label>Description </Form.Label>\r\n                                <Form.Control size=\"xl\" as=\"textarea\" onChange={(event) => this.setState({ projectDescription: event.target.value })} value={this.state.projectDescription} placeholder=\"\" />\r\n                            </Form.Group>\r\n                            <div style={{  margin: '15px', }} >\r\n                                <label>Add Members</label>\r\n                                    <Autocomplete\r\n                                    onChange={(option, value) =>{this.setState({projectmembers:value.map(mem=>mem.id)},()=>{console.log(this.state.projectmembers)})}}\r\n                                    multiple\r\n                                    id=\"tags-outlined\"\r\n                                    options={this.state.searchuser}\r\n                                    getOptionLabel={(option) => option.username}\r\n                                    filterSelectedOptions\r\n                                    renderInput={(params) => (\r\n                                    <TextField\r\n                                    {...params}\r\n                                    onChange={(e)=>{this.getMembers(e.target.value)}}\r\n                                    variant=\"outlined\"\r\n                                    // label=\"filterSelectedOptions\"\r\n                                    // placeholder=\"Favorites\"\r\n                                    />\r\n                                    )}\r\n                                    />\r\n     \r\n                            </div>\r\n\r\n                    \r\n\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button onClick={() => { this.toggleModal() }}>Close</Button>\r\n                            <Button onClick={() => {this.createProject() }}>Create</Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                </div>\r\n\r\n\r\n\r\n                <Button style={{position:'relative',right:0}} onClick={() => this.toggleModal()} variant=\"outline-success\">Create Project</Button>\r\n                <div style={{ height: '80vh', width: '95vw' }}>\r\n\r\n                  <XGrid rows={this.state.rw} columns={this.cs} />\r\n\r\n                 </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProjectScreen\r\n","import Cookies from 'universal-cookie';\r\nimport { useHistory } from \"react-router-dom\"; \r\nimport '../index.css';\r\nimport React,{useState} from 'react'\r\nimport axios from 'axios'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Button } from '@material-ui/core';\r\n\r\n\r\n\r\nlet cookies = new Cookies();\r\n// const API_URL=process.env.REACT_APP_API_URL\r\nconst {API_URL}=require('../env')\r\n\r\nexport default function Signin() {\r\n   const [data,setdata]=useState({})\r\n    const [error,setError]=useState('')\r\n  \r\n   \r\n  \r\n   const history=useHistory();\r\n    const forward=(loc)=>history.push(loc)\r\n  \r\n  \r\n   \r\n    \r\n   const SignIn=async()=>{\r\n    // console.log(process.env.API_URL)\r\n    // console.log(process.env.host)\r\n\r\n  \r\n    console.log(\"signin\")\r\n    var usrnme=data.username;\r\n    var pwd=data.password;\r\n    //\r\n    console.log(\"window location\",window.location.hostname,API_URL)\r\n    await axios.post(`${API_URL}/api/signin/`,{\r\n      \"username\":usrnme,\r\n      \"password\":pwd\r\n  \r\n    }).then(\r\n      (res)=>{\r\n        console.log(res)\r\n        const {message,error}=res.data\r\n        if(message || error) {setError(message || error)}\r\n  \r\n        if(res.data.status){\r\n        console.log(\"sign res\",res)\r\n        // console.log(\"sign res\",res.data.qrdata[0].username)\r\n        cookies.set('uid',res.data.qrdata[0].id,{path:'/',sameSite:true,secure:false})\r\n        cookies.set('username',res.data.qrdata[0].username,{path:'/',sameSite:true,secure:false})\r\n        cookies.set('token',res.data.token,{path:'/',sameSite:true,secure:false})\r\n        // console.log(\"getting cookies\",cookies.get('token'))\r\n        \r\n        // forward('/homescreen')\r\n         forward('/projectlist')\r\n        }\r\n  \r\n      }\r\n      \r\n    ).catch(rej=>{\r\n      console.log(\"Error while sign in:\",rej)\r\n      // setError(rej)\r\n    }\r\n      )\r\n  }\r\n  \r\n    return (\r\n      \r\n      <div className=\"form-parent flex-center\" >\r\n\r\n        \r\n        <div className=\"form flex-center\" >\r\n        \r\n        <div style={{position:'relative',top:'-3rem' }}><h3>Sign In</h3></div>\r\n    \r\n        <TextField  style={{}} \r\n        className=\"textfiel\" label=\"Username\" variant=\"outlined\" onChange={(e) => {\r\n                      const temp = data\r\n                      temp.username = e.target.value\r\n                      setdata(temp)\r\n                      // console.log(2+3)\r\n                      // console.log(data)\r\n                  }} />\r\n               \r\n         <TextField style={{ }} \r\n        className=\"textfiel\" label=\"Password\" type=\"password\" variant=\"outlined\"\r\n                      onChange={(e) => { const temp = data; temp.password = e.target.value; setdata(temp);\r\n                      //  console.log(data) \r\n                       }} />\r\n        <Button variant='contained' color='primary' onClick={(e)=>SignIn()}>SignIn</Button>\r\n        <div style={{color:\"red\"}}> {error?error:''} </div>\r\n\r\n        <div>\r\n          <p style={{display:'inline' }}>No Account? </p>\r\n          <a  style={{color:'blue'}} onClick={()=>forward('/signup')}>Signup</a>\r\n        </div>\r\n                    \r\n  \r\n        </div>\r\n        <br/>\r\n        \r\n        \r\n   \r\n      </div>\r\n    )}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {Route,BrowserRouter as Router} from 'react-router-dom';\r\nimport BugScreen from './screens/bugScreen';\r\nimport SignUp  from './screens/signup';\r\nimport ProjectScreen from './screens/projectScreen';\r\nimport SignIn from \"./screens/signin\";\r\nconst routing=(\r\n<Router>\r\n  <Route exact path=\"/\" component={SignIn}/>\r\n  <Route exact path=\"/signup\" component={SignUp}/>\r\n  <Route exact path=\"/buglist\" component={BugScreen}/>\r\n  <Route exact path=\"/projectlist\" component={ProjectScreen}/>\r\n  </Router>\r\n)\r\n\r\n\r\n\r\n\r\nReactDOM.render(\r\nrouting,document.getElementById('root')\r\n);\r\n\r\nexport default routing\r\n\r\n\r\n"],"sourceRoot":""}